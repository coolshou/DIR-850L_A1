--- png2pnm.c.org	2011-08-22 18:26:49.592999931 +0800
+++ png2pnm.c	2011-08-22 19:09:20.365000070 +0800
@@ -200,6 +200,7 @@
   int           bit_depth;
   int           channels;
   int           color_type;
+  int           interlace_type;
   int           alpha_present;
   int           row, col;
   int           ret;
@@ -279,7 +280,7 @@
 
   /* get the new color-type and bit-depth (after expansion/stripping) */
   png_get_IHDR (png_ptr, info_ptr, &width, &height, &bit_depth, &color_type,
-    NULL, NULL, NULL);
+    &interlace_type, NULL, NULL);
 
   /* check for 16-bit files */
   if (bit_depth == 16)
@@ -314,31 +315,33 @@
   /* row_bytes is the width x number of channels x (bit-depth / 8) */
   row_bytes = png_get_rowbytes (png_ptr, info_ptr);
 
-  if ((png_pixels = (png_byte *) malloc (row_bytes * height * sizeof (png_byte))) == NULL) {
-    png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
-    return FALSE;
-  }
-
-  if ((row_pointers = (png_byte **) malloc (height * sizeof (png_bytep))) == NULL)
+  if (interlace_type == PNG_INTERLACE_NONE)
   {
-    png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
-    free (png_pixels);
-    png_pixels = NULL;
-    return FALSE;
-  }
-
-  /* set the individual row_pointers to point at the correct offsets */
-  for (i = 0; i < (height); i++)
-    row_pointers[i] = png_pixels + i * row_bytes;
-
-  /* now we can go ahead and just read the whole image */
-  png_read_image (png_ptr, row_pointers);
-
-  /* read rest of file, and get additional chunks in info_ptr - REQUIRED */
-  png_read_end (png_ptr, info_ptr);
+	  if ((png_pixels = (png_byte *) malloc (row_bytes * sizeof (png_byte))) == NULL) {
+		  png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
+		  return FALSE;
+	  }
+  } else {
+	  if ((png_pixels = (png_byte *) malloc (row_bytes * height * sizeof (png_byte))) == NULL) {
+		  png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
+		  return FALSE;
+	  }
+
+	  if ((row_pointers = (png_byte **) malloc (height * sizeof (png_bytep))) == NULL)
+	  {
+		  png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
+		  free (png_pixels);
+		  png_pixels = NULL;
+		  return FALSE;
+	  }
+
+	  /* set the individual row_pointers to point at the correct offsets */
+	  for (i = 0; i < (height); i++)
+		  row_pointers[i] = png_pixels + i * row_bytes;
 
-  /* clean up after the read, and free any memory allocated - REQUIRED */
-  png_destroy_read_struct (&png_ptr, &info_ptr, (png_infopp) NULL);
+	  /* now we can go ahead and just read the whole image */
+	  png_read_image (png_ptr, row_pointers);
+  }
 
   /* write header of PNM file */
 
@@ -373,6 +376,11 @@
 
   for (row = 0; row < height; row++)
   {
+	if (interlace_type == PNG_INTERLACE_NONE)
+	{
+		pix_ptr = png_pixels;
+		png_read_row(png_ptr, pix_ptr, NULL);
+	}
     for (col = 0; col < width; col++)
     {
       for (i = 0; i < (channels - alpha_present); i++)
@@ -419,6 +427,12 @@
         fprintf (pnm_file, "\n");
   } /* end for row */
 
+  /* read rest of file, and get additional chunks in info_ptr - REQUIRED */
+  png_read_end (png_ptr, info_ptr);
+
+  /* clean up after the read, and free any memory allocated - REQUIRED */
+  png_destroy_read_struct (&png_ptr, &info_ptr, (png_infopp) NULL);
+
   if (row_pointers != (unsigned char**) NULL)
     free (row_pointers);
   if (png_pixels != (unsigned char*) NULL)
