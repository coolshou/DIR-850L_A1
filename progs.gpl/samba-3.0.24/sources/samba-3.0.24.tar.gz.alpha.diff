Binary files original/samba-3.0.24/source/bin/nmblookup and build/samba-3.0.24/source/bin/nmblookup differ
Binary files original/samba-3.0.24/source/bin/smbtree and build/samba-3.0.24/source/bin/smbtree differ
diff -urN original/samba-3.0.24/source/config.sub build/samba-3.0.24/source/config.sub
--- original/samba-3.0.24/source/config.sub
+++ build/samba-3.0.24/source/config.sub
@@ -270,6 +270,7 @@
 	| sparcv8 | sparcv9 | sparcv9b \
 	| strongarm \
 	| tahoe | thumb | tic4x | tic80 | tron \
+	| ubicom32 \
 	| v850 | v850e \
 	| we32k \
 	| x86 | xscale | xscalee[bl] | xstormy16 | xtensa \
@@ -353,6 +354,7 @@
 	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
 	| tron-* \
 	| v850-* | v850e-* | vax-* \
+	| ubicom32 \
 	| we32k-* \
 	| x86-* | x86_64-* | xps100-* | xscale-* | xscalee[bl]-* \
 	| xstormy16-* | xtensa-* \
diff -urN original/samba-3.0.24/source/configure build/samba-3.0.24/source/configure
--- original/samba-3.0.24/source/configure
+++ build/samba-3.0.24/source/configure
@@ -23935,7 +23935,9 @@
 See \`config.log' for more details." >&5
 echo "$as_me: error: cannot run test program while cross compiling
 See \`config.log' for more details." >&2;}
-   { (exit 1); exit 1; }; }
+#Sam Chen: modified to skip cross compiling failure
+#   { (exit 1); exit 1; };
+   }
 else
   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
diff -urN original/samba-3.0.24/source/include/includes.h build/samba-3.0.24/source/include/includes.h
--- original/samba-3.0.24/source/include/includes.h
+++ build/samba-3.0.24/source/include/includes.h
@@ -1608,4 +1608,10 @@
 #include "libnscd.h"
 #endif
 
+//sam_pan
+#ifdef SAMBA_LINK_ALL
+int nmbd_main(int argc, const char *argv[]);
+int main_with_smbd(int argc, char **argv);
+#endif
+
 #endif /* _INCLUDES_H */
diff -urN original/samba-3.0.24/source/lib/charcnv.c build/samba-3.0.24/source/lib/charcnv.c
--- original/samba-3.0.24/source/lib/charcnv.c
+++ build/samba-3.0.24/source/lib/charcnv.c
@@ -173,7 +173,9 @@
 		}
 	}
 
-	if (did_reload) {
+	//+++ modify by siyou 2007/1/25 09:25¤U¤È,
+	// following codes take a long time.
+	if (0) { //if(did_reload) {
 		/* XXX: Does this really get called every time the dos
 		 * codepage changes? */
 		/* XXX: Is the did_reload test too strict? */
diff -urN original/samba-3.0.24/source/Makefile.in build/samba-3.0.24/source/Makefile.in
--- original/samba-3.0.24/source/Makefile.in
+++ build/samba-3.0.24/source/Makefile.in
@@ -115,7 +115,7 @@
 LIBSMBSHAREMODES_MAJOR=0
 LIBSMBSHAREMODES_MINOR=2
 
-FLAGS1 = $(CFLAGS) @FLAGS1@ -Iinclude -I$(srcdir)/include -I$(srcdir)/tdb @SMBWRAP_INC@ -I. $(CPPFLAGS) -I$(srcdir) -D_SAMBA_BUILD_
+FLAGS1 = $(CFLAGS) -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 @FLAGS1@ -Iinclude -I$(srcdir)/include -I$(srcdir)/tdb @SMBWRAP_INC@ -I. $(CPPFLAGS) -I$(srcdir) -D_SAMBA_BUILD_ -I$(TOPDIR)/include
 FLAGS2 =
 FLAGS3 = 
 FLAGS4 = 
@@ -153,6 +153,11 @@
 
 BIN_PROGS = $(BIN_PROGS1) $(BIN_PROGS2) $(BIN_PROGS3) @EXTRA_BIN_PROGS@
 
+#sam_pan
+CFLAGS+= -DSAMBA_LINK_ALL
+BIN_PROGS =
+SBIN_PROGS = bin/smbd
+
 EVERYTHING_PROGS = bin/debug2html@EXEEXT@ bin/smbfilter@EXEEXT@ bin/talloctort@EXEEXT@ \
 	bin/log2pcap@EXEEXT@
 
@@ -918,9 +923,11 @@
 	  dir=bin $(MAKEDIR); fi
 	@: >> $@ || : > $@ # what a fancy emoticon!
 
-bin/smbd@EXEEXT@: $(SMBD_OBJ) @BUILD_POPT@ bin/.dummy
+#sam_pan add
+SMBD_OBJ += utils/smbpasswd.o libsmb/passchange.o utils/passwd_util.o
+bin/smbd@EXEEXT@: $(SMBD_OBJ) $(NMBD_OBJ) @BUILD_POPT@ bin/.dummy
 	@echo Linking $@
-	@$(CC) $(FLAGS) @PIE_LDFLAGS@ -o $@ $(SMBD_OBJ) $(LDFLAGS) $(LDAP_LIBS) \
+	@$(CC) $(FLAGS) @PIE_LDFLAGS@ -o $@ $(SMBD_OBJ) $(NMBD_OBJ1) $(LDFLAGS) $(LDAP_LIBS) \
 		$(KRB5LIBS) $(DYNEXP) $(PRINT_LIBS) $(AUTH_LIBS) \
 		$(ACL_LIBS) $(PASSDB_LIBS) $(LIBS) @POPTLIBS@ @SMBD_LIBS@ 
 
diff -urN original/samba-3.0.24/source/nmbd/nmbd.c build/samba-3.0.24/source/nmbd/nmbd.c
--- original/samba-3.0.24/source/nmbd/nmbd.c
+++ build/samba-3.0.24/source/nmbd/nmbd.c
@@ -621,7 +621,12 @@
 /**************************************************************************** **
  main program
  **************************************************************************** */
- int main(int argc, const char *argv[])
+//sam_pan add
+#ifdef SAMBA_LINK_ALL
+int nmbd_main(int argc, const char *argv[])
+#else 
+int main(int argc, const char *argv[])
+#endif
 {
 	pstring logfile;
 	static BOOL opt_interactive;
diff -urN original/samba-3.0.24/source/smbadduser build/samba-3.0.24/source/smbadduser
--- original/samba-3.0.24/source/smbadduser
+++ build/samba-3.0.24/source/smbadduser
@@ -0,0 +1,79 @@
+#!/bin/csh
+#
+# smbadduser - Written by Mike Zakharoff
+#
+
+prefix=/home/kenny_chiu/dhpw310av_ath/rootfs
+exec_prefix=${prefix}
+LIBDIR=${exec_prefix}/lib
+PRIVATEDIR=/var/etc/samba
+CONFIGDIR=/var/etc/samba
+
+unalias *
+set path = ($path /usr/bin)
+
+set smbpasswd = $PRIVATEDIR/smbpasswd
+set user_map  = $CONFIGDIR/smbusers
+
+#
+# Set to site specific passwd command
+#
+set passwd    = "getent passwd"
+#set passwd    = "niscat passwd.org_dir"
+#set passwd    = "ypcat passwd"
+
+set line = "----------------------------------------------------------"
+if ($#argv == 0) then
+	echo $line
+	echo "Written: Mike Zakharoff email: michael.j.zakharoff@boeing.com"
+	echo ""
+	echo "   1) Updates $smbpasswd"
+	echo "   2) Updates $user_map"
+	echo "   3) Executes smbpasswd for each new user"
+	echo ""
+	echo "smbadduser unixid:ntid unixid:ntid ..."
+	echo ""
+	echo "Example: smbadduser zak:zakharoffm johns:smithj"
+	echo $line
+	exit 1
+endif
+
+touch $smbpasswd $user_map
+set new  = ()
+foreach one ($argv)
+	echo $one | grep ':' >& /dev/null
+	if ($status != 0) then
+		echo "ERROR: Must use unixid:ntid like -> zak:zakharoffm"
+		continue
+	endif
+	set unix = `echo $one | awk -F: '{print $1}'`
+	set ntid = `echo $one | awk -F: '{print $2}'`
+
+	set usr = `eval $passwd | awk -F: '$1==USR {print $1}' USR=$unix`
+	if ($#usr != 1) then
+		echo "ERROR: $unix Not in passwd database SKIPPING..."
+		continue
+	endif
+        set tmp = `cat $smbpasswd | awk -F: '$1==USR {print $1}' USR=$unix`
+	if ($#tmp != 0) then
+		echo "ERROR: $unix is already in $smbpasswd SKIPPING..."
+		continue
+	endif
+
+	echo "Adding: $unix to $smbpasswd"
+	/usr/bin/smbpasswd -a -n $unix
+	if ($unix != $ntid) then
+		echo "Adding: {$unix = $ntid} to $user_map"
+		echo "$unix = $ntid" >> $user_map
+	endif
+	set new = ($new $unix)
+end
+
+#
+# Enter password for new users
+#
+foreach one ($new)
+	echo $line
+	echo "ENTER password for $one"
+	smbpasswd $one
+end
diff -urN original/samba-3.0.24/source/smbd/close.c build/samba-3.0.24/source/smbd/close.c
--- original/samba-3.0.24/source/smbd/close.c
+++ build/samba-3.0.24/source/smbd/close.c
@@ -345,6 +345,10 @@
 
 	file_free(fsp);
 
+//+++ We want user can unplug USB disk immediately after copy, add by sam_pan 2011/4/26 10:51¤W¤È
+	sync();
+//--- add by sam_pan 2011/4/26 10:51¤W¤È
+
 	if (err == -1 || err1 == -1) {
 		errno = saved_errno;
 		return saved_errno;
diff -urN original/samba-3.0.24/source/smbd/msdfs.c build/samba-3.0.24/source/smbd/msdfs.c
--- original/samba-3.0.24/source/smbd/msdfs.c
+++ build/samba-3.0.24/source/smbd/msdfs.c
@@ -780,42 +780,49 @@
  Set up the Dfs referral for the dfs pathname
 ******************************************************************/
 
-int setup_dfs_referral(connection_struct *orig_conn, char *pathname, int max_referral_level, char **ppdata)
+int setup_dfs_referral(connection_struct *orig_conn, char *pathname, int max_referral_level, char **ppdata, NTSTATUS *pstatus)
 {
 	struct junction_map junction;
 	int consumedcnt;
 	BOOL self_referral = False;
 	pstring buf;
 	int reply_size = 0;
-	char *pathnamep = pathname;
+	char *pathnamep = NULL;
 	TALLOC_CTX *ctx;
 
 	if (!(ctx=talloc_init("setup_dfs_referral"))) {
+		*pstatus = NT_STATUS_NO_MEMORY;
 		return -1;
 	}
 
 	ZERO_STRUCT(junction);
 
 	/* get the junction entry */
-	if (!pathnamep) {
+	if (!pathname) {
 		talloc_destroy(ctx);
+		*pstatus = NT_STATUS_NOT_FOUND;
 		return -1;
 	}
 
 	/* Trim pathname sent by client so it begins with only one backslash.
 	   Two backslashes confuse some dfs clients
 	 */
-	while (pathnamep[0] == '\\' && pathnamep[1] == '\\') {
+
+	pstrcpy(buf, pathname);	
+	pathnamep = buf;
+	while (IS_DIRECTORY_SEP(pathnamep[0]) && IS_DIRECTORY_SEP(pathnamep[1])) {
 		pathnamep++;
 	}
-
-	pstrcpy(buf, pathnamep);
+	
 	/* The following call can change cwd. */
-	if (!get_referred_path(ctx, buf, &junction, &consumedcnt, &self_referral)) {
+	if (!get_referred_path(ctx, buf, &junction, &consumedcnt, &self_referral)) 
+	{
+		*pstatus = NT_STATUS_NOT_FOUND;
 		vfs_ChDir(orig_conn,orig_conn->connectpath);
 		talloc_destroy(ctx);
 		return -1;
-	}
+	}	
+		
 	vfs_ChDir(orig_conn,orig_conn->connectpath);
 	
 	if (!self_referral) {
@@ -832,9 +839,12 @@
 
 	/* create the referral depeding on version */
 	DEBUG(10,("max_referral_level :%d\n",max_referral_level));
-	if(max_referral_level<2 || max_referral_level>3) {
+	if (max_referral_level < 2) {
 		max_referral_level = 2;
 	}
+	if (max_referral_level > 3) {
+		max_referral_level = 3;
+	}
 
 	switch(max_referral_level) {
 	case 2:
@@ -848,6 +858,7 @@
 	default:
 		DEBUG(0,("setup_dfs_referral: Invalid dfs referral version: %d\n", max_referral_level));
 		talloc_destroy(ctx);
+		*pstatus = NT_STATUS_INVALID_LEVEL;
 		return -1;
 	}
       
@@ -857,6 +868,7 @@
 	}
 
 	talloc_destroy(ctx);
+	*pstatus = NT_STATUS_OK;
 	return reply_size;
 }
 
diff -urN original/samba-3.0.24/source/smbd/server.c build/samba-3.0.24/source/smbd/server.c
--- original/samba-3.0.24/source/smbd/server.c
+++ build/samba-3.0.24/source/smbd/server.c
@@ -763,6 +763,18 @@
 	set_auth_parameters(argc,argv);
 #endif
 
+//sam_pan add
+#ifdef SAMBA_LINK_ALL        
+    if(strcmp(argv[0],"smbpasswd")==0)
+    {
+        return main_with_smbd(argc, argv);
+    }    
+    else if(strcmp(argv[0],"nmbd")==0)
+    {
+        return nmbd_main(argc, argv);
+    }   
+#endif
+
 	pc = poptGetContext("smbd", argc, argv, long_options, 0);
 	
 	while((opt = poptGetNextOpt(pc)) != -1) {
diff -urN original/samba-3.0.24/source/smbd/trans2.c build/samba-3.0.24/source/smbd/trans2.c
--- original/samba-3.0.24/source/smbd/trans2.c
+++ build/samba-3.0.24/source/smbd/trans2.c
@@ -4934,6 +4934,7 @@
   	pstring pathname;
 	int reply_size = 0;
 	int max_referral_level;
+	NTSTATUS status = NT_STATUS_OK;
 
 	DEBUG(10,("call_trans2getdfsreferral\n"));
 
@@ -4947,8 +4948,8 @@
 		return ERROR_DOS(ERRDOS,ERRbadfunc);
 
 	srvstr_pull(inbuf, pathname, &params[2], sizeof(pathname), -1, STR_TERMINATE);
-	if((reply_size = setup_dfs_referral(conn, pathname,max_referral_level,ppdata)) < 0)
-		return UNIXERROR(ERRDOS,ERRbadfile);
+	if((reply_size = setup_dfs_referral(conn, pathname,max_referral_level,ppdata,&status)) < 0)
+		return ERROR_NT(status);
     
 	SSVAL(outbuf,smb_flg2,SVAL(outbuf,smb_flg2) | FLAGS2_DFS_PATHNAMES);
 	send_trans2_replies(outbuf,bufsize,0,0,*ppdata,reply_size);
diff -urN original/samba-3.0.24/source/smbd/vfs-wrap.c build/samba-3.0.24/source/smbd/vfs-wrap.c
--- original/samba-3.0.24/source/smbd/vfs-wrap.c
+++ build/samba-3.0.24/source/smbd/vfs-wrap.c
@@ -740,8 +740,17 @@
 	if (SMB_VFS_LSEEK(fsp, fd, len-1, SEEK_SET) != len -1)
 		goto done;
 
-	if (SMB_VFS_WRITE(fsp, fd, &c, 1)!=1)
-		goto done;
+//+++ mark by siyou 2005/9/2 11:05am
+//Bug fix: Can't copy large file (ex.800MB) to FAT usb disk over Samba.
+//The above lseek can create a large file in no time,
+//but the following line would really create a large file,
+//it would take a long time and the client would timeout for this case.
+//+++ siyou, newer linux kernel FAT ftruncate() with extend file size be supported, but it support in the same way here 2012/03/08
+// And it will take a long time to really create the file.
+// please modify kernel/fs/fat/file.c fat_setattr().
+	//if (SMB_VFS_WRITE(fsp, fd, &c, 1)!=1)
+	//	goto done;
+//--- mark by siyou 2005/9/2 11:05am
 
 	/* Seek to where we were */
 	if (SMB_VFS_LSEEK(fsp, fd, currpos, SEEK_SET) != currpos)
diff -urN original/samba-3.0.24/source/utils/nmblookup.c build/samba-3.0.24/source/utils/nmblookup.c
--- original/samba-3.0.24/source/utils/nmblookup.c
+++ build/samba-3.0.24/source/utils/nmblookup.c
@@ -21,6 +21,9 @@
 */
 
 #include "includes.h"
+ //J.Su modify for plc setting-client list
+#include "elbox_config.h"
+
 
 extern BOOL AllowDebugChange;
 
@@ -103,7 +106,9 @@
 	struct node_status_extra extra;
 	fstring cleanname;
 
+	#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 	d_printf("Looking up status of %s\n",inet_ntoa(ip));
+	#endif
 	make_nmb_name(&nname, name, type);
 	status = node_status_query(fd,&nname,ip, &count, &extra);
 	if (status) {
@@ -112,14 +117,24 @@
 			for (j=0;cleanname[j];j++) {
 				if (!isprint((int)cleanname[j])) cleanname[j] = '.';
 			}
+			#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 			d_printf("\t%-15s <%02x> - %s\n",
 			       cleanname,status[i].type,
 			       node_status_flags(status[i].flags));
+		    #endif
 		}
-		d_printf("\n\tMAC Address = %02X-%02X-%02X-%02X-%02X-%02X\n",
+		
+		#ifdef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
+		d_printf("MAC Address = %02X:%02X:%02X:%02X:%02X:%02X\n",
 				extra.mac_addr[0], extra.mac_addr[1],
 				extra.mac_addr[2], extra.mac_addr[3],
 				extra.mac_addr[4], extra.mac_addr[5]);
+	    #else
+		d_printf("\n\tMAC Address = %02X-%02X-%02X-%02X-%02X-%02X\n",
+		        extra.mac_addr[0], extra.mac_addr[1],
+				extra.mac_addr[2], extra.mac_addr[3],
+				extra.mac_addr[4], extra.mac_addr[5]);
+		#endif
 		d_printf("\n");
 		SAFE_FREE(status);
 	} else {
@@ -137,7 +152,9 @@
 	struct in_addr *ip_list=NULL;
 
 	if (got_bcast) {
+		#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 		d_printf("querying %s on %s\n", lookup, inet_ntoa(bcast_addr));
+		#endif
 		ip_list = name_query(ServerFD,lookup,lookup_type,use_bcast,
 				     use_bcast?True:recursion_desired,
 				     bcast_addr,&count, &flags, NULL);
@@ -147,8 +164,10 @@
 		     !ip_list && j >= 0;
 		     j--) {
 			bcast = iface_n_bcast(j);
+			#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 			d_printf("querying %s on %s\n", 
 			       lookup, inet_ntoa(*bcast));
+		    #endif
 			ip_list = name_query(ServerFD,lookup,lookup_type,
 					     use_bcast,
 					     use_bcast?True:recursion_desired,
@@ -165,10 +184,14 @@
 		if (translate_addresses) {
 			struct hostent *host = gethostbyaddr((char *)&ip_list[j], sizeof(ip_list[j]), AF_INET);
 			if (host) {
+				#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 				d_printf("%s, ", host -> h_name);
+				#endif
 			}
 		}
+		#ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 		d_printf("%s %s<%02x>\n",inet_ntoa(ip_list[j]),lookup, lookup_type);
+		#endif
 		/* We can only do find_status if the ip address returned
 		   was valid - ie. name_query returned true.
 		 */
@@ -186,7 +209,7 @@
 /****************************************************************************
   main program
 ****************************************************************************/
-int main(int argc,char *argv[])
+int main(int argc,const char *argv[])
 {
   int opt;
   unsigned int lookup_type = 0x0;
@@ -248,7 +271,9 @@
   }
 
   if (!lp_load(dyn_CONFIGFILE,True,False,False,True)) {
+	  #ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
 	  fprintf(stderr, "Can't load %s - run testparm to debug it\n", dyn_CONFIGFILE);
+	  #endif
   }
 
   load_interfaces();
diff -urN original/samba-3.0.24/source/utils/smbpasswd.c build/samba-3.0.24/source/utils/smbpasswd.c
--- original/samba-3.0.24/source/utils/smbpasswd.c
+++ build/samba-3.0.24/source/utils/smbpasswd.c
@@ -549,7 +549,12 @@
 /*********************************************************
  Start here.
 **********************************************************/
+//sam_pan add
+#ifdef SAMBA_LINK_ALL
+int main_with_smbd(int argc, char **argv)
+#else
 int main(int argc, char **argv)
+#endif
 {	
 	int local_flags = 0;
 	
@@ -564,7 +569,6 @@
 	}
 
 	load_case_tables();
-
 	local_flags = process_options(argc, argv, local_flags);
 
 	setup_logging("smbpasswd", True);
diff -urN original/samba-3.0.24/source/utils/smbtree.c build/samba-3.0.24/source/utils/smbtree.c
--- original/samba-3.0.24/source/utils/smbtree.c
+++ build/samba-3.0.24/source/utils/smbtree.c
@@ -21,6 +21,8 @@
 */
 
 #include "includes.h"
+ //J.Su modify for plc setting-client list
+#include "elbox_config.h"
 
 static BOOL use_bcast;
 
@@ -208,8 +210,9 @@
 
         for (wg = workgroups; wg; wg = wg->next) {
 
+		        #ifndef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
                 printf("%s\n", wg->name);
-
+                #endif
                 /* List servers */
 
                 free_name_list(servers);
@@ -220,10 +223,11 @@
                         continue;
 
                 for (sv = servers; sv; sv = sv->next) {
-
-                        printf("\t\\\\%-15s\t\t%s\n", 
-			       sv->name, sv->comment);
-
+                        #ifdef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
+						printf("%s\n", sv->name);
+                        #else
+						printf("\t\\\\%-15s\t\t%s\n", sv->name, sv->comment);
+						#endif
                         /* List shares */
 
                         free_name_list(shares);
@@ -246,7 +250,11 @@
 /****************************************************************************
   main program
 ****************************************************************************/
- int main(int argc,char *argv[])
+ #ifdef ELBOX_PROGS_GPL_SAMBA_3_0_24_LITE //J.Su modify for plc setting-client list
+ int main(int argc,const char *argv[])
+ #else
+  int main(int argc, char *argv[])
+ #endif
 {
 	struct poptOption long_options[] = {
 		POPT_AUTOHELP
@@ -285,7 +293,6 @@
 		}
         cmdline_auth_info.got_pass = True;
 	}
-
 	/* Now do our stuff */
 
         if (!print_tree(&cmdline_auth_info))
